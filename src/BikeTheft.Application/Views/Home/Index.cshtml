@{
    ViewData["Title"] = "Bike Theft";
}
@model IList<string>

<div class="container mb-5">
    <div class="row text-center">
        <h4 class="bd-lead bd-main bd-intro mb-4">Please select a city to display statistics for stolen bikes.</h4>
    </div>
    <div class="row">
        @foreach (var city in Model)
        {
            <div class="col-sm mb-2">
                <button class="w-100 btn btn-info text-center text-dark cityName text-dark" id="@city">
                    @city <br /><span class="badge badge-success @city-badge text-dark"></span>
                    <div class="spinner-border spinner-border-sm cityName-spinner d-none @city-spinner" role="status">
                        <span class="sr-only"></span>
                    </div>
                </button>
            </div>
        }
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div id="chartContainer" style="height: 300px; width: 100%;" class="mb-5">
        </div>
        <div id="chartContainerYearly" style="height: 200px; width: 100%;">
        </div>
    </div>
</div>

<script src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>
<script>
    //display&hide city buttons
    $('.cityName').click(function() {

        var id=  $(this).attr('id');
        $('.'+ id +'-spinner').removeClass('d-none')

        var id = $(this).attr('id')
        loadBikeData(id);

        $('.cityName').each(function() {
            $(this).removeClass('alert-danger');
            $(this).prop('disabled', true);
        });

        $(this).addClass('alert-danger');
        $('.badge-success').addClass('d-none');
    });

    //arreange charts
    function loadBikeData(cityName) {
        var resultArrayMonthly = [];
        var resultArrayYearly = [];
        $.ajax({
            url: '/home/GetData',
            type: 'GET',
            data: {
                cityName: cityName
            },
            datatype: 'JSON',
            success: function(result) {
                $.each(result, function(key, value) {
                    var dateProperty = key.split('-');

                    resultArrayMonthly.push({
                        x: new Date(dateProperty[0], dateProperty[1]),
                        y: value
                    });

                    resultArrayYearly.push({
                        label: dateProperty[0],
                        y: value
                    });
                });

                 displayStolenBikeCountForSelectedCity(cityName, resultArrayYearly)

                //set chart data
                $('#chartContainer').CanvasJSChart({
                    animationEnabled: true,
                    title: {
                        text: 'Monthly Stolen Bikes for ' + cityName,
                        fontSize: 20
                    },
                    axisX: {
                        valueFormatString: 'MMM-YY'
                    },
                    axisY: {
                        title: 'QUANTITY',
                    },
                    data: [{
                        xValueFormatString: 'MMM-YY',
                        type: 'spline',
                        dataPoints: resultArrayMonthly
                    }]
                });

                //set chart data
                $('#chartContainerYearly').CanvasJSChart({
                    animationEnabled: true,
                    animationDuration: 2000,
                    title: {
                        text: 'Yearly Stolen Bikes for ' + cityName,
                        fontSize: 20
                    },
                    axisY: {
                        title: 'QUANTITY',
                        includeZero: false
                    },
                    data: [{
                        type: 'column',
                        toolTipContent: '{label}: {y}',
                        dataPoints: groupResponseDataByYear(resultArrayYearly.reverse())
                    }]
                });

                //display spinner
                $('.cityName-spinner').each(function() {
                    $(this).addClass('d-none');
                });
                $('.cityName').each(function() {
                    $(this).prop('disabled', false);
                });
            },
            error: function() {
                alert('Something went wrong..')
            }
        });
    };

    function displayStolenBikeCountForSelectedCity(selectedCity, bikeData){
        var groupedBikeData = groupResponseDataByYear(bikeData);
        var stolenBikeCount = 0;
        for (var i = 0; i < groupedBikeData.length; i++) {
            stolenBikeCount+=groupedBikeData[i].y;
        }
        $(this).addClass('alert-success');
        
        $('.'+ selectedCity +'-badge').removeClass('d-none');
        $('.'+ selectedCity +'-badge').text(stolenBikeCount);
    }

    function groupResponseDataByYear(bikeData) {
        let counts = bikeData.reduce((previous, current) => {
            let count = previous.get(current.label) || 0;
            previous.set(current.label, current.y + count);
            return previous;
        }, new Map());

        let reducedBikeData = [...counts].map(([label, y]) => {
            return { label, y }
        });
        return reducedBikeData;
    }
</script>
